{"version":3,"sources":["components/logo.jpg","components/home.js","components/projects.js","components/experience.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","center_style","display","justifyContent","alignItems","style","position","left","top","transform","src","Logo","class","width","height","borderRadius","Component","Projects","Experience","App","backgroundColor","to","textDecoration","color","paddingLeft","className","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,kC,8NC+B5BC,E,iLAxBX,IAQMC,EAAe,CAAEC,QAAS,OAAOC,eAAgB,SAASC,WAAY,UAC5E,OACE,yBAAKC,MAAO,CACVC,SAAU,WAAYC,KAAM,MAAOC,IAAK,MACxCC,UAAW,0BAEb,4BACA,yBAAKC,IAAKC,IAAMC,MAAM,SAASP,MAAO,CAACQ,MAAO,IAAKC,OAAQ,IAAKC,aAAc,IAAMZ,eAAgB,SACpGC,WAAY,YACZ,wBAAIC,MAAOJ,GAAX,0BACA,wBAAII,MAAOJ,GAAX,mCACA,uI,GAtBae,aCiCJC,E,iLA9BX,IAIMhB,EAAe,CAAEC,QAAS,OAAOC,eAAgB,SAASC,WAAY,UAC5E,OACE,yBAAKC,MAAO,CACVC,SAAU,WAAYC,KAAM,MAAOC,IAAK,MACxCC,UAAW,wBAEb,wBAAKJ,MAAOJ,GAAZ,cACA,6BAAK,2BAAG,uBAAGI,MAAOJ,GAAV,+CACL,6BADE,0GAEF,6BAAM,uBAAII,MAAOJ,GAAX,yCACN,6BAHE,uIAIF,6BAJE,8IAKF,6BAAM,uBAAII,MAAOJ,GAAX,qCACN,6BANE,yNAOF,6BAAM,uBAAII,MAAOJ,GAAX,oEACN,6BARE,0GASF,6BATE,gHAUF,6BAAM,uBAAII,MAAOJ,GAAX,kEACN,6BAXE,4GAYF,6BAAM,uBAAII,MAAOJ,GAAX,0CACN,6BAbE,oI,GAdYe,aCgCRE,E,iLA7BX,IAIMjB,EAAe,CAAEC,QAAS,OAAOC,eAAgB,SAASC,WAAY,UAC5E,OACE,yBAAKC,MAAO,CACVC,SAAU,WAAYC,KAAM,MAAOC,IAAK,MACxCC,UAAW,wBAEb,wBAAIJ,MAAOJ,GAAX,qBACA,6BAAM,2BAAG,uBAAGI,MAAOJ,GAAV,gBACN,6BAAM,uBAAII,MAAOJ,GAAX,oCACN,6BAFG,+UAGH,6BAHG,iMAIH,6BAJG,0JAKH,6BALG,uMAQN,yBAAKI,MAAOJ,GAAc,2BACvB,uBAAII,MAAOJ,GAAX,iEACA,6BAAM,uBAAII,MAAOJ,GAAX,kCACN,6BAHuB,2EAIvB,6BAJuB,4G,GAtBPe,a,gBC8BVG,E,iLApBX,OACE,kBAAC,IAAD,KACA,yBAAKd,MAAO,CAACe,gBAAiB,QAC5BN,OAAQ,OAAOZ,QAAS,OACtBC,eAAgB,SAChBC,WAAY,WAChB,kBAAC,IAAD,CAAMiB,GAAI,IAAKhB,MAAO,CAACiB,eAAgB,OAAOC,MAAM,UAAU,oCAC9D,kBAAC,IAAD,CAAMF,GAAI,YAAahB,MAAO,CAACmB,YAAa,IAAMF,eAAgB,OAAOC,MAAM,UAAU,wCACzF,kBAAC,IAAD,CAAMF,GAAI,cAAehB,MAAO,CAACmB,YAAa,IAAMF,eAAgB,OAAOC,MAAM,SAAUE,UAAU,gBAAe,0CACpH,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW5B,IACjC,kBAAC,IAAD,CAAO0B,KAAK,YAAYC,OAAK,EAACC,UAAYX,IAC1C,kBAAC,IAAD,CAAOS,KAAK,cAAcC,OAAK,EAACC,UAAYV,W,GAnBlCF,aCKEa,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.08a1430b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.01ca909d.jpg\";","import React, { Component } from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport 'react-bootstrap';\r\nimport Logo from \"./logo.jpg\"\r\nclass Home extends Component {\r\n\r\n  render() {\r\n    const divStyle = {\r\n      margin: '30px',\r\n      border: 'groove'\r\n    };\r\n    var styles = {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  };\r\n    const center_style = { display: \"flex\",justifyContent: \"center\",alignItems: \"center\"};\r\n    return (\r\n      <div style={{\r\n        position: 'absolute', left: '50%', top: '50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }}>\r\n      <p/>\r\n      <img src={Logo} class=\"center\" style={{width: 200, height: 200, borderRadius: 400/2,justifyContent: 'center',\r\n      alignItems: 'center'}} />\r\n      <h1 style={center_style}> Sai Swapna Gollapudi </h1>\r\n      <h3 style={center_style}> Data Science Graduate student </h3>\r\n      <p > Focused on applied Machine Learning, Data Analysis. I am a learner who can never say I know it all</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport 'react-bootstrap';\r\n\r\nclass Projects extends Component {\r\n\r\n  render() {\r\n    const divStyle = {\r\n      margin: '30px',\r\n      border: 'groove'\r\n    };\r\n    const center_style = { display: \"flex\",justifyContent: \"center\",alignItems: \"center\"};\r\n    return (\r\n      <div style={{\r\n        position: 'absolute', left: '50%', top: '20%',\r\n        transform: 'translate(-50%, 0%)'\r\n    }}>\r\n      <h2  style={center_style}> Projects </h2>\r\n      <div><p><b style={center_style}>Unsupervised Topic Modeling on News dataset</b>\r\n         <br />Implemented the collapsed Gibbs sampler for LDA modeling to identify topics in 20 newsgroups text data.\r\n         <br /><b  style={center_style}>Classification of e-commerce products</b>\r\n         <br />Built an automation engine to classify the e-commerce products into various categories using SVM, random forest and neural networks.\r\n         <br />Built a regression model for predicting crime rate using Bayesian Linear Regression with hyper parameter tuning and Kcross fold validation.\r\n         <br /><b  style={center_style}>Product Review Sentiment Analysis</b>\r\n         <br /> Built e-commerce evaluator product that web scraps data from various e-commerce websites and analyses customer review and product pages using sentiment analysis models and NLP to provide insights to manufacturers.\r\n         <br /><b  style={center_style}>Automated Essay Grading System using Natural Language Processing</b>\r\n         <br />Feature extraction on text data using POS Tagger, Word2Vec and modeling with NLP and ensemble learning.\r\n         <br />Implemented Association rule mining, classification, clustering and statistical analysis to extract insights.\r\n         <br /><b  style={center_style}>Bayesian Belief Networks for Restaurant violations predictions</b>\r\n         <br />Neural network and Bayesian belief networks for predicting violations of a restaurant using Yelp dataset.\r\n         <br /><b  style={center_style}>Artificial Intelligence based chat bot</b>\r\n         <br />Built a virtual agent chat bot using Recurrent Neural Networks and NLP that acts as a personal fitness and health advisor.</p>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Projects;\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport 'react-bootstrap';\r\n\r\nclass Experience extends Component {\r\n\r\n  render() {\r\n    const divStyle = {\r\n      margin: '30px',\r\n      border: 'groove'\r\n    };\r\n    const center_style = { display: \"flex\",justifyContent: \"center\",alignItems: \"center\"};\r\n    return (\r\n      <div style={{\r\n        position: 'absolute', left: '50%', top: '20%',\r\n        transform: 'translate(-50%, 0%)'\r\n    }}>\r\n      <h2 style={center_style}> Work Experience </h2>\r\n      <div ><p><b style={center_style}>Data Analyst</b>\r\n         <br /><b  style={center_style}>Tata Consultancy Services, India</b>\r\n         <br />Built supervised predictive classification models for retail firms for classifying the order returns as damaged products or not, based on 2 years historical data using logistic regression, decision trees and random forest. Implemented techniques like SMOTE, oversampling and under-sampling to handle imbalanced data.(Python,Sklearn)\r\n         <br />Developed automation of financial analysis dashboards to help the financial users visualize analysis dashboard and make business decisions.(RStudio, Spark,SQL, Hadoop, Complex Data Analysis)\r\n         <br />Performed descriptive and inferential statistical analysis and designed data analytics models for deriving business insights from customerâ€™s data.\r\n         <br />Actively participated in gathering the business requirement, brainstorming with clients and team while building analytics models and visualizing their inferences for multiple business use cases.\r\n         </p>\r\n      </div>\r\n      <div style={center_style}><p>\r\n         <b  style={center_style}>Graduate Assistant - Research Applications Support Specialist</b>\r\n         <br /><b  style={center_style}>Indiana University,Bloomington</b>\r\n         <br />Built a REACT CRUD application with MongoDB, EXPRESS, REACT, and NODE.JS\r\n         <br />Built dashboards using Tableau for presenting the analysis results of research applications usage.</p>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Experience;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Home from './components/home'\nimport Projects from './components/projects'\nimport Experience from './components/experience'\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n    const boxStyle = {\n      margin: '10px',\n      border: 'groove'\n    };\n    const center_style = { display: \"flex\",justifyContent: \"center\",alignItems: \"center\"};\n    return (\n      <Router>\n      <div style={{backgroundColor: 'black',\n        height: '92px',display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"}}>\n      <Link to={'/'} style={{textDecoration: 'none',color:'white'}}><b>Home</b></Link>\n      <Link to={'/projects'} style={{paddingLeft: 100 , textDecoration: 'none',color:'white'}}><b>Projects</b></Link>\n      <Link to={'/experience'} style={{paddingLeft: 100 , textDecoration: 'none',color:'white'}} className=\"navbar-brand\"><b>Experience</b></Link>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/projects\" exact component={ Projects} />\n        <Route path=\"/Experience\" exact component={ Experience } />\n      </Switch>\n      </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n//return (\n//  <Router>\n//  <div>\n//    <Home />\n//    <Projects />\n//    <Experience />\n//  </div>\n//  </Router>\n//);\n//}\n//}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}